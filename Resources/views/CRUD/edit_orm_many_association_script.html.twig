{# This code manage the many-to-[one|many] association field popup #}

{% autoescape false %}
{% set associationadmin = sonata_admin.field_description.associationadmin %}
<!-- edit many association -->
<script type="text/javascript">
{#
  handle link click in a list :
    - if the parent has an objectId defined then the related input get updated
    - if the parent has NO object then an ajax request is made to refresh the popup
#}

var field_dialog_form_list_link_{{ id }} = function(event) {

    initialize_popup_{{ id }}();

    event.preventDefault();
    event.stopPropagation();

    jQuery.blockUI({ message: Admin.loadingMessage(null)});

    Admin.log('[{{ id }}|field_dialog_form_list_link] handle link click in a list');

    var element = jQuery(this).parents('#field_dialog_{{ id }} .sonata-ba-list-field');

    console.log( jQuery(this).attr('href'));

    // the user does click on a row column
    if (element.length == 0) {
        // make a recursive call (ie: reset the filter)
        jQuery.ajax({
            type: 'GET',
            url: jQuery(this).attr('href')
        })
                .done(function(html, textStatus, jqXHR) {
                    Admin.log('[{{ id }}|field_dialog_form_list] ajax done', field_dialog_{{ id }});
                    field_dialog_{{ id }}.html(html);
                    Admin.add_filters(field_dialog_{{ id }});
                    Admin.initElements(jQuery(field_dialog_{{ id }}));
                    console.log('field_dialog_form_list_link_');
                    {# capture the submit event to make an ajax call, ie : POST data to the
                       related create admin #}
                    jQuery('a:not([class*="admin-ajax-ignore-event"], [class*="admin-ajax-ignore-tabbable"], [class*="fileupload-exists"], ul.dropdown-menu li > a), a[class*="rz-admin-filter-reset-button"], ul.tabdrop li > a', field_dialog_{{ id }}).on('click', field_dialog_form_list_link_{{ id }});
                    jQuery('form, a:not([class*="rz-admin-filter-reset-button"])', field_dialog_{{ id }}).on('submit', field_dialog_form_list_filter_{{ id }});
                })
                .fail(function(jqXHR, textStatus, errorThrown){
                    Admin.log('[{{ id }}|field_dialog_form_list] ajax fail', field_dialog_{{ id }});
                    Admin.log('Error Message', errorThrown);
                })
                .always(function() {
                    Admin.log('[{{ id }}|field_dialog_form_list] ajax always', field_dialog_{{ id }});
                });

        return;
    }

    jQuery('#{{ id }}').val(element.attr('objectId'));
    jQuery('#{{ id }}').trigger('change');

    field_dialog_{{ id }}.modal('hide');
}

// handle filter
var field_dialog_form_list_filter_{{ id }} = function(event) {
    event.preventDefault();
    event.stopPropagation();

    jQuery.blockUI({ message: Admin.loadingMessage(null)});

    Admin.log('[{{ id }}|field_dialog_form_list_filter] submit filter');

    var form = jQuery(this);

    jQuery(form).ajaxSubmit({
        type: form.attr('method'),
        url: form.attr('action'),
        dataType: 'html',
        data: {_xml_http_request: true},
        success: function(html) {
            field_dialog_{{ id }}.html(html);
            Admin.add_filters(field_dialog_{{ id }});
            Admin.initElements(jQuery(field_dialog_{{ id }}));
            {# capture the submit event to make an ajax call, ie : POST data to the
               related create admin #}
            console.log('field_dialog_form_list_filter_');
            jQuery('a:not([class*="admin-ajax-ignore-event"], [class*="admin-ajax-ignore-tabbable"], [class*="fileupload-exists"], ul.dropdown-menu li > a), a[class*="rz-admin-filter-reset-button"], ul.tabdrop li > a', field_dialog_{{ id }}).on('click', field_dialog_form_list_link_{{ id }});
            jQuery('form, a:not([class*="rz-admin-filter-reset-button"])', field_dialog_{{ id }}).on('submit', field_dialog_form_list_filter_{{ id }});
        }
    });
}

// handle the add link
var field_dialog_form_list_{{ id }} = function(event) {

    initialize_popup_{{ id }}();

    event.preventDefault();
    event.stopPropagation();

    jQuery.blockUI({ message: Admin.loadingMessage(null)});

    Admin.log('[{{ id }}|field_dialog_form_list] open the list modal');

    var a = jQuery(this);

    field_dialog_{{ id }}.empty();

    // retrieve the form element from the related admin generator
    jQuery.ajax({
        url: a.attr('href'),
        dataType: 'html'
    })
            .done(function(html, textStatus, jqXHR) {

                Admin.log('[{{ id }}|field_dialog_form_list] retrieving the list content');

                {# populate the popup container #}
                field_dialog_{{ id }}.html(html);
                {# capture the submit event to make an ajax call, ie : POST data to the
                   related create admin #}
                jQuery('a:not([class*="admin-ajax-ignore-event"], [class*="admin-ajax-ignore-tabbable"],  [class*="fileupload-exists"],  ul.dropdown-menu li > a), a[class*="rz-admin-filter-reset-button"], ul.tabdrop li > a', field_dialog_{{ id }}).on('click', field_dialog_form_list_link_{{ id }});
                jQuery('form, a:not([class*="rz-admin-filter-reset-button"])', field_dialog_{{ id }}).on('submit', field_dialog_form_list_filter_{{ id }});

                {# open the dialog in modal mode #}
                var init_width = Math.round(jQuery(window).width() - (jQuery(window).width() * .2));
                init_width = (init_width > 980) ? 980 :  init_width;
                field_dialog_{{ id }}.modal({'width': init_width });
                field_dialog_{{ id }}.on('hidden', function (event) {
                    if (jQuery(event.target).hasClass('admin-filter-ajax')) {
                        return false;
                    } else {
                        Admin.log('[{{ id }}|field_dialog_form_add] modal hidden - removing `on` events');
                        {# make sure we have a clean state #}
                        jQuery('a:not([class*="admin-ajax-ignore-event"], [class*="admin-ajax-ignore-tabbable"],  [class*="fileupload-exists"], ul.dropdown-menu li > a), a[class*="rz-admin-filter-reset-button"], ul.tabdrop li > a', jQuery(this)).off('click');
                        jQuery('form, a:not([class*="rz-admin-filter-reset-button"])', jQuery(this)).off('submit');
                        jQuery(this).empty();
                        field_dialog_{{ id }} = null;
                        console.log(field_dialog_{{ id }});
                    }
                });

                field_dialog_{{ id }}.on('shown', function (event) {
                    console.log('field_dialog_form_list_');
                    Admin.add_filters(jQuery(this));
                    Admin.initElements(jQuery(this));
                });

            })
            .fail(function(jqXHR, textStatus, errorThrown){
                Admin.log('[{{ id }}|field_dialog_form_add] ajax fail', field_dialog_{{ id }});
                Admin.log('Error Message', errorThrown);
            })
            .always(function() {
                Admin.log('[{{ id }}|field_dialog_form_add] ajax always', field_dialog_{{ id }});
            });
};

{# handle the add link #}
var field_dialog_form_add_{{ id }} = function(event) {

    initialize_popup_{{ id }}();

    event.preventDefault();
    event.stopPropagation();

    var a = jQuery(this);
    field_dialog_{{ id }}.empty();

    jQuery.blockUI({ message: Admin.loadingMessage(null)});

    Admin.log('[{{ id }}|field_dialog_form_add] add link action');

    {# retrieve the form element from the related admin generator #}
    jQuery.ajax({
        url: a.attr('href'),
        dataType: 'html'
    })
            .done(function(html, textStatus, jqXHR) {
                Admin.log('[{{ id }}|field_dialog_form_add] ajax done', field_dialog_{{ id }});
                {# populate the popup container #}
                field_dialog_{{ id }}.html(html);
                jQuery('a:not([data-toggle="tab"],[data-toggle="pill"],[class*="fileupload-exists"])', field_dialog_{{ id }}).on('click', field_dialog_form_action_{{ id }});
                jQuery('form', field_dialog_{{ id }}).on('submit', field_dialog_form_action_{{ id }});

                {# open the dialog in modal mode #}
                var init_width = Math.round(jQuery(window).width() - (jQuery(window).width() * .2));
                init_width = (init_width > 980) ? 980 :  init_width;
                field_dialog_{{ id }}.modal({'width': init_width });

                field_dialog_{{ id }}.on('hidden', function () {
                    Admin.log('[{{ id }}|field_dialog_form_add] modal hidden - removing `on` events');
                    {# make sure we have a clean state #}
                    jQuery('a:not([data-toggle="tab"],[data-toggle="pill"],[class*="fileupload-exists"])', jQuery(this)).off('click');
                    jQuery('form', jQuery(this)).off('submit');
                    jQuery(this).empty();
                    field_dialog_{{ id }} = null;
                    console.log(field_dialog_{{ id }});
                });

                field_dialog_{{ id }}.on('shown', function () {
                    {# capture the submit event to make an ajax call, ie : POST data to the
                        related create admin #}
                    console.log('here');
                    Admin.initElements(jQuery(this));
                });
            })
            .fail(function(jqXHR, textStatus, errorThrown){
                Admin.log('[{{ id }}|field_dialog_form_add] ajax fail', field_dialog_{{ id }});
                Admin.log('Error Message', errorThrown);
            })
            .always(function() {
                Admin.log('[{{ id }}|field_dialog_form_add] ajax always', field_dialog_{{ id }});
            });
};

// handle the post data
var field_dialog_form_action_{{ id }} = function(event) {

    event.preventDefault();
    event.stopPropagation();

    jQuery.blockUI({ message: Admin.loadingMessage(null)});

    Admin.log('[{{ id }}|field_dialog_form_action] action catch', this);

    initialize_popup_{{ id }}();

    var element = jQuery(this);

    if (this.nodeName == 'FORM') {
        var url  = element.attr('action');
        var type = element.attr('method');
        var dataType = 'json';
    } else if (this.nodeName == 'A') {
        var url  = element.attr('href');
        var type = 'GET';
        var dataType = null;
    } else {
        alert('unexpected element : @' + this.nodeName + '@');
        return;
    }

    if (element.hasClass('sonata-ba-action')) {
        Admin.log('[{{ id }}|field_dialog_form_action] reserved action stop catch all events');
        return;
    }

    var data = {_xml_http_request: true}
    var form = jQuery(this);

    Admin.log('[{{ id }}|field_dialog_form_action] execute ajax call');

    // the ajax post
    jQuery(form).ajaxSubmit({
        url: url,
        type: type,
        data: data,
        dataType: dataType,
        success: function(data) {

            Admin.log('[{{ id }}|field_dialog_form_action] ajax success');

            if (typeof data == 'string') {
                field_dialog_{{ id }}.html(data);
                {# reattach the event #}
                console.log('field_dialog_form_action_');
                jQuery('a:not([data-toggle="tab"],[data-toggle="pill"],[class*="fileupload-exists"])', field_dialog_{{ id }}).on('click', field_dialog_form_action_{{ id }});
                jQuery('form', field_dialog_{{ id }}).on('submit', field_dialog_form_action_{{ id }});
                Admin.initElements(jQuery(field_dialog_{{ id }}));
                return;
            };

            {#
                if the crud action return ok, then the element has been added
                so the widget container must be refresh with the last option available
            #}
            if (data.result == 'ok') {

                field_dialog_{{ id }}.modal('hide');

                {% if sonata_admin.edit == 'list' %}
                {#
                   in this case we update the hidden input, and call the change event to
                   retrieve the post information
                #}
                jQuery('#{{ id }}').val(data.objectId);
                jQuery('#{{ id }}').change();

                {% else %}
                {# reload the form element #}
                jQuery('#field_widget_{{ id }}').closest('form').ajaxSubmit({
                    url: '{{ url('sonata_admin_retrieve_form_element', {
                                         'elementId': id,
                                         'objectId':  sonata_admin.admin.root.id(sonata_admin.admin.root.subject),
                                         'uniqid':    sonata_admin.admin.root.uniqid,
                                         'code':      sonata_admin.admin.root.code }
                                         )
                                  }}',
                    data: {_xml_http_request: true },
                    type: 'POST',
                    success: function(html) {
                        jQuery('#field_container_{{ id }}').replaceWith(html);
                        var newElement = jQuery('#{{ id }} [value="' + data.objectId + '"]');
                        if (newElement.is("input")) {
                            newElement.attr('checked', 'checked');
                        } else {
                            newElement.attr('selected', 'selected');
                        }

                        Admin.initElements(jQuery('#field_container_{{ id }}'));

                        jQuery('#field_container_{{ id }}').trigger('sonata-admin-append-form-element');
                    }
                });

                {% endif %}

                return;
            }

            {# otherwise, display form error #}
            field_dialog_{{ id }}.html(data);

            Admin.add_pretty_errors(field_dialog_{{ id }});


            {# reattach the event #}
            jQuery('a:not([data-toggle="tab"],[data-toggle="pill"],[class*="fileupload-exists"])', field_dialog_{{ id }}).on('click', field_dialog_form_action_{{ id }});
            jQuery('form', field_dialog_{{ id }}).on('submit', field_dialog_form_action_{{ id }});
            Admin.initElements(jQuery(field_dialog_{{ id }}));
        },
        error: function(html) {
            field_dialog_{{ id }}.html(html.responseText);
            {# reattach the event #}
            console.log('field_dialog_form_action_');
            jQuery('a:not([data-toggle="tab"],[data-toggle="pill"],[class*="fileupload-exists"])', field_dialog_{{ id }}).on('click', field_dialog_form_action_{{ id }});
            jQuery('form', field_dialog_{{ id }}).on('submit', field_dialog_form_action_{{ id }});
            Admin.initElements(jQuery(field_dialog_{{ id }}));
            return false;
        }
    });

    return false;
}

var field_dialog_{{ id }} = false;

function initialize_popup_{{ id }}() {
    {# initialize component #}
    if (!field_dialog_{{ id }}) {
        var div = "<div class='rz-cms modal hide fade' data-backdrop='static' id='field_dialog_{{ id }}' aria-hidden='false'></div>";
        field_dialog_{{ id }} = jQuery(div);
        {# move the dialog as a child of the root element, nested form breaks html ... #}
        jQuery(document.body).append(field_dialog_{{ id }});
        Admin.log('[{{ id }}|field_dialog] move dialog container as a document child');
    }
}

{#
    This code is used to defined the "add" popup
    this function initialize the popup
    this can be only done this way has popup can be cascaded
#}
function start_field_dialog_form_add_{{ id }}(link) {

    {# remove the html event #}
    link.onclick = null;

    initialize_popup_{{ id }}();

    {# add the jQuery event to the a element #}
    jQuery(link)
            .click(field_dialog_form_add_{{ id }})
            .trigger('click')
    ;

    return false;
}

Admin.add_pretty_errors(field_dialog_{{ id }});


{% if sonata_admin.edit == 'list' %}
{#
    This code is used to defined the "list" popup
    this function initialize the popup
    this can be only done this way has popup can be cascaded
#}
function start_field_dialog_form_list_{{ id }}(link) {

    link.onclick = null;

    initialize_popup_{{ id }}();

    // add the jQuery event to the a element
    jQuery(link)
            .click(field_dialog_form_list_{{ id }})
            .trigger('click')
    ;

    return false;
}

function remove_selected_element_{{ id }}(link) {

    link.onclick = null;

    jQuery(link)
            .click(field_remove_element_{{ id}})
            .trigger('click')
    ;

    return false;
}

function field_remove_element_{{ id }}(event) {
    event.preventDefault();

    if (jQuery('#{{ id }} option').get(0)) {
        jQuery('#{{ id }}').attr('selectedIndex', '-1').children("option:selected").attr("selected", false);
    }

    jQuery('#{{ id }}').val('');
    jQuery('#{{ id }}').trigger('change');

    return false;
}
{#
  attach onchange event on the input
#}

// update the label
jQuery('#{{ id }}').on('change', function(event) {

    Admin.log('[{{ id }}] update the label');

    jQuery('#field_widget_{{ id }}').html("<span><img src=\"{{ asset('bundles/sonataadmin/ajax-loader.gif') }}\" style=\"vertical-align: middle; margin-right: 10px\"/>{{ 'loading_information'|trans([], 'SonataAdminBundle') }}</span>");
    jQuery.ajax({
        type: 'GET',
        url: '{{ url('rz_media_short_object_information', {
                    'objectId': 'OBJECT_ID',
                    'uniqid': associationadmin.uniqid,
                    'code': associationadmin.code
                })}}'.replace('OBJECT_ID', jQuery(this).val()),
        success: function(html) {
            jQuery('#field_widget_{{ id }}').html(html);
        }
    });
});

{% endif %}
</script>
<!-- / edit many association -->
{% endautoescape %}
